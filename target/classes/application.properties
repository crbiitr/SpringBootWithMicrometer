## Check all properties here
#https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

## Check here for micrometer properties
#https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready-metrics-common-tags

server.port=8081
############################################ Prometheus configs ############################################################
#management.endpoints.web.exposure.include=prometheus, metrics

management.security.enabled=false
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.metrics.enable.http.client.requests=true
management.metrics.distribution.percentiles-histogram.http.client.requests=true


management.metrics.tags.application=TestingMicrometer
management.metrics.tags.test1Key=test1Value
management.metrics.tags.test2Key=test2Value
#management.metrics.distribution.maximum-expected-value.*= # Maximum value that meter IDs starting-with the specified name are expected to observe.
#management.metrics.distribution.minimum-expected-value.*= # Minimum value that meter IDs starting-with the specified name are expected to observe.
#management.metrics.distribution.percentiles.*= # Specific computed non-aggregable percentiles to ship to the backend for meter IDs starting-with the specified name.
#management.metrics.distribution.percentiles-histogram.*= # Whether meter IDs starting with the specified name should publish percentile histograms.
#management.metrics.distribution.sla.*= # Specific SLA boundaries for meter IDs starting-with the specified name. The longest match wins.
#management.metrics.enable.*= # Whether meter IDs starting-with the specified name should be enabled. The longest match wins, the key `all` can also be used to configure all meters.
